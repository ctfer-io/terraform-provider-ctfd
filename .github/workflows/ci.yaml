name: CI

on: [push, pull_request]

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

  tests:
    strategy:
      matrix:
        go-version: [1.x, 1.21.x]
        platform: [ubuntu-latest]
        include:
          - go-version: 1.x
            platform: ubuntu-latest
            update-coverage: true
    runs-on: ${{ matrix.platform }}
    needs: [setup]
    services:
      ctfd:
        image: ctfd/ctfd:3.6.1
        ports:
          - 8000:8000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Wait for CTFd server
        run: |
          max_attempts=60
          base_url="http://localhost:8000"
          for ((i=0; i<$max_attempts; i++)); do
            if curl --head --fail --silent --show-error "$base_url" >/dev/null; then
              echo "Server is up and running!"
              break
            else
              echo "Waiting for the server to respond... (attempt $((i+1)))"
              sleep 5
            fi
          done
          if [ $i -eq $max_attempts ]; then
            echo "Server did not respond within the allotted time. Exiting..."
            exit 1
          fi
      
      - name: Setup CTFd
        run: go run cmd/setup/main.go
        env:
          CTFD_URL: http://localhost:8000

      - name: Run go acceptance tests
        run: make test-acc
        env:
          CTFD_URL: http://localhost:8000
      
      - name: Upload coverage to Coveralls
        if: ${{ matrix.update-coverage }}
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cov.out

  go-lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.21.x
      
      - name: go-lint
        uses: golangci/golangci-lint-action@v3
