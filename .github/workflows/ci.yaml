name: CI

on: [push, pull_request]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      ctfd:
        image: ctfd/ctfd:3.8.0@sha256:61712c4af6e9cddccfafc4503484c8091f6325be286d407595b922dc9552b5ae
        ports:
          - 8000:8000
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod

      - name: Cache go modules
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Wait for CTFd server
        run: |
          max_attempts=60
          base_url="http://localhost:8000"
          for ((i=0; i<$max_attempts; i++)); do
            if curl --head --fail --silent --show-error "$base_url" >/dev/null; then
              echo "Server is up and running!"
              break
            else
              echo "Waiting for the server to respond... (attempt $((i+1)))"
              sleep 5
            fi
          done
          if [ $i -eq $max_attempts ]; then
            echo "Server did not respond within the allotted time. Exiting..."
            exit 1
          fi

      - name: Setup CTFd
        uses: ctfer-io/ctfd-setup@c917efc8b6fdfcc97d6fa4e2c4d48ea533d3d774 # v1.7.1
        with:
          url: 'http://ctfd:8000'
          appearance_name: TFP-CTFd
          appearance_description: Terraform Provider CTFd.
          mode: teams
          admin_name: ctfer
          admin_email: ctfer-io@protonmail.com
          admin_password: ctfer

      - name: Run go acceptance tests
        run: make test-acc
        env:
          CTFD_URL: http://localhost:8000
          CTFD_ADMIN_USERNAME: ctfer
          CTFD_ADMIN_PASSWORD: ctfer

      - name: Upload coverage to Coveralls
        uses: shogo82148/actions-goveralls@25f5320d970fb565100cf1993ada29be1bb196a1 # v1.10.0
        with:
          path-to-profile: cov.out

  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod

      - name: go-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
